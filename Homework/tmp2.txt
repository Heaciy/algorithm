设 n 条直线将平面分割为 f(n) 个独立部分
f(0) = 1, f(1) = 2, f(2) = 4, f(3) = 7
已知 n-1 条直线将平面分割为 f(n-1) 个独立部分
则第 n 条直线与前 n-1 条直线最多有 n-1 个交点,故被分割为n段,
每段直线将之前某个小的区域一分为二,则整体较原来增加了 n 个区域
故:
f(n) = f(n-1)+n
f(n-1) = f(n-1)+n-1
f(3) = f(2)+3
f(2) = f(1)+2
f(1) = f(0)+1
f(0) = 1
故f(n) = 1 + 1 + 2 + 3 + ... + n-1 + n
       =n(n+1)/2 + 1

可以将其简化,限制巡游路线必须为双调巡游,从最左边的点开始,
严格向右前进,直至最右边的点，然后调头严格向左前进，直至回到起始点。
对n个点按照x坐标从小到大排序(认为任意两点X坐标不同),P1最左,Pn最右。使用P(i,j)，表示一条包含
P1,P2,...Pj的最短双调路线(从Pi向左到P1再从P1向右到Pj),P(n,n)即所求。
假设双调路线P(i,j)长度为l(i,j),点Pi和Pj的直线距离为 |Pi,Pj|=sqrt((Xi-Xj)^2+(Yi-Yj)^2)。
(1)当i<j-1 (Pj-1在Pi右边), 即Pj-1为除Pj外最右点
    则: l(i,j) = l(i,j-1)+|Pj-1,Pj|
(2)当Pj-1=Pi (Pj-1即为Pi),则Pj-1一定位于Pi到P1的路径上，故P1到Pj的路径上,与Pj相连的可能为
P1,P2,P3...PJ-2中的任一点,设该点为Pk(1<=K<=J-2)
    则: l(i,j) = min(l(k,i)+|Pk,Pj|)   {1<=k<=j-2}
               = min(l(k,j-1)+|Pk,Pj|) {1<=k<=j-2}
(3)当i=j(P(i,j)为闭合路径),此时i=j=n,Pn-1即为除Pn外最右点
    则: l(n,n) = l(n-1,n)+|Pn-1,Pn|
根据上述三种情况得到的递归式,采用动态规划的方式自底向上的计算出最短双调路径
https://blog.csdn.net/yangtzhou/article/details/83450810
https://blog.csdn.net/xiajun07061225/article/details/8092247

背包问题(动态规划)
https://blog.csdn.net/mu399/article/details/7722810

背包问题 / 算法实验报告
教材改正 P169 temp[j] = f[j]